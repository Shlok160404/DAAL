	#include <iostream>
	using namespace std;
	
	// Linear search function
	int linearSearch(int arr[], int n, int target) {
	    for (int i = 0; i < n; i++) {
	        if (arr[i] == target) {
	            return i;
	        }
	    }
	    return -1;
	}
	
	// Recursive binary search function
	int binarySearch(int arr[], int low, int high, int target) {
	    if (low > high) {
	        return -1;
	    }
	    
	    int mid = low + (high - low) / 2;
	    
	    if (arr[mid] == target) {
	        return mid;
	    }
	    else if (arr[mid] > target) {
	        return binarySearch(arr, low, mid - 1, target);
	    }
	    else {
	        return binarySearch(arr, mid + 1, high, target);
	    }
	}
	
	int main() {
	    int arr[10];
	    cout<<"enter 10 numbers"<<endl;
	    for(int t=0;t<10;t++)
	    {
	    	cin>>arr[t];
		}
	    int n = sizeof(arr) / sizeof(arr[0]);
	    int target;
	    cout<<"enter target"<<endl;
	    cin>>target;
	    
	    // Linear Search
	    int result1 = linearSearch(arr, n, target);
	    if (result1 != -1)
	        cout << "Element found at index (Linear Search): " << result1 << endl;
	    else
	        cout << "Element not found (Linear Search)" << endl;
	
	    // Binary Search
	    int result2 = binarySearch(arr, 0, n - 1, target);
	    if (result2 != -1)
	        cout << "Element found at index (Binary Search): " << result2 << endl;
	    else
	        cout << "Element not found (Binary Search)" << endl;
	
	    return 0;
	}
